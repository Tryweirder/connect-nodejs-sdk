/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0-SNAPSHOT
 *
 */
const SquareConnect = require('../../src/index');

describe('BusinessAppointmentSettings', function() {
  beforeEach(function() {
    this.api = new SquareConnect.BusinessAppointmentSettings();
  });

  it('should create an instance of BusinessAppointmentSettings', function() {
    // uncomment below and update the code to test BusinessAppointmentSettings
    //var instane = new SquareConnect.BusinessAppointmentSettings();
    //expect(instance).to.be.a(SquareConnect.BusinessAppointmentSettings);
  });

  it('should have the property locationTypes (base name: "location_types")', function() {
    // uncomment below and update the code to test the property locationTypes
    //var instane = new SquareConnect.BusinessAppointmentSettings();
    //expect(instance).to.be();
  });
  it('should have the property alignmentTime (base name: "alignment_time")', function() {
    // uncomment below and update the code to test the property alignmentTime
    //var instane = new SquareConnect.BusinessAppointmentSettings();
    //expect(instance).to.be();
  });
  it('should have the property minBookingLeadTimeSeconds (base name: "min_booking_lead_time_seconds")', function() {
    // uncomment below and update the code to test the property minBookingLeadTimeSeconds
    //var instane = new SquareConnect.BusinessAppointmentSettings();
    //expect(instance).to.be();
  });
  it('should have the property maxBookingLeadTimeSeconds (base name: "max_booking_lead_time_seconds")', function() {
    // uncomment below and update the code to test the property maxBookingLeadTimeSeconds
    //var instane = new SquareConnect.BusinessAppointmentSettings();
    //expect(instance).to.be();
  });
  it('should have the property anyTeamMemberBookingEnabled (base name: "any_team_member_booking_enabled")', function() {
    // uncomment below and update the code to test the property anyTeamMemberBookingEnabled
    //var instane = new SquareConnect.BusinessAppointmentSettings();
    //expect(instance).to.be();
  });
  it('should have the property multipleServiceBookingEnabled (base name: "multiple_service_booking_enabled")', function() {
    // uncomment below and update the code to test the property multipleServiceBookingEnabled
    //var instane = new SquareConnect.BusinessAppointmentSettings();
    //expect(instance).to.be();
  });
  it('should have the property maxAppointmentsPerDayLimitType (base name: "max_appointments_per_day_limit_type")', function() {
    // uncomment below and update the code to test the property maxAppointmentsPerDayLimitType
    //var instane = new SquareConnect.BusinessAppointmentSettings();
    //expect(instance).to.be();
  });
  it('should have the property maxAppointmentsPerDayLimit (base name: "max_appointments_per_day_limit")', function() {
    // uncomment below and update the code to test the property maxAppointmentsPerDayLimit
    //var instane = new SquareConnect.BusinessAppointmentSettings();
    //expect(instance).to.be();
  });
  it('should have the property cancellationWindowSeconds (base name: "cancellation_window_seconds")', function() {
    // uncomment below and update the code to test the property cancellationWindowSeconds
    //var instane = new SquareConnect.BusinessAppointmentSettings();
    //expect(instance).to.be();
  });
  it('should have the property cancellationFeeMoney (base name: "cancellation_fee_money")', function() {
    // uncomment below and update the code to test the property cancellationFeeMoney
    //var instane = new SquareConnect.BusinessAppointmentSettings();
    //expect(instance).to.be();
  });
  it('should have the property cancellationPolicy (base name: "cancellation_policy")', function() {
    // uncomment below and update the code to test the property cancellationPolicy
    //var instane = new SquareConnect.BusinessAppointmentSettings();
    //expect(instance).to.be();
  });
  it('should have the property cancellationPolicyText (base name: "cancellation_policy_text")', function() {
    // uncomment below and update the code to test the property cancellationPolicyText
    //var instane = new SquareConnect.BusinessAppointmentSettings();
    //expect(instance).to.be();
  });
  it('should have the property skipBookingFlowStaffSelection (base name: "skip_booking_flow_staff_selection")', function() {
    // uncomment below and update the code to test the property skipBookingFlowStaffSelection
    //var instane = new SquareConnect.BusinessAppointmentSettings();
    //expect(instance).to.be();
  });
});
